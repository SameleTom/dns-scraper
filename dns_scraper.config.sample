#PostgreSQL configuration data
# host, port, user, password - data needed to create the connection
# dbname - database name used (in case it would clash with your existing DB)
# prefix - prefix for tables to use - best to use something like TLD_DATE, don't
#   forget to add dot at the end if it's supposed to be schema name; by default
#   prefix is empty, which means default postgres schema 'public' will be used
[database]
host = localhost
port = 5432
user = some_user
password = db_password
dbname = dns_scraper
#prefix = schema_name.

#unbound_config - fine-tuned configuration for libunbound (optional)
#forwarder - if you want to use forwarder recursive DNS server (optional)
#  Note that with forwarer you will get TTLs depending on forwarder's cache state.
#retries - number of retries on SERVFAIL
#ta_file - trust anchor file for DNSSEC validation, same format as
#  ub_ctx.add_ta_file() accepts
#rrs - RR types to fetch&store. NS, DS, RRSIG, NSEC and NSEC3 are stored always.
#  Additional RRs can be chosen from:
#    A, AAAA, DNSKEY, MX, NSEC3PARAM, SOA, SPF, SSHFP, TXT, TLSA
#  TLSA adds default prefix _443._tcp. for the RR queried
# source_encoding - encoding of the input file, necessary if IDN are used;
#   default utf-8
[dns]
#unbound_config = unbound.config
#forwarder = 127.0.0.1
retries = 1
ta_file = keys
rrs = A, AAAA, DNSKEY, MX, NSEC3PARAM, SOA, SPF, SSHFP, TXT, TLSA
#source_encoding = utf-8

#logfile - logging/debug stuff gets dumped here, use "-" for stderr (without quotes)
#loglevel - one of debug, info, warning, error, fatal
[log]
logfile = dns_scraper.log
loglevel = debug

#scan_threads - number of threads doing DNS queries
#storage_threads - number of concurrent threads to DB
[processing]
scan_threads = 20
storage_threads = 1
